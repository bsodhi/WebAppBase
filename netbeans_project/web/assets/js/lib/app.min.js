var myApp=angular.module("myApp",["ngRoute","ngAnimate","myApp.SharedServices","ui.bootstrap"]).config(["$routeProvider","$locationProvider",function(a,d){a.when("/Index",{templateUrl:"./Partials/home.a"});a.when("/Login",{templateUrl:"./Partials/login.a"});a.when("/Register",{templateUrl:"./Partials/register.a"});a.when("/Profile/:pid",{templateUrl:"./Partials/register.a"});a.when("/Logout",{templateUrl:"./App/logout.a",controller:"DummyCtrl"});a.otherwise({redirectTo:"/Index"});d.html5Mode(!1)}]);
myApp.controller("DummyCtrl",["$scope",function(a){}]);var C={log:function(a){"localhost"===window.location.hostname&&console.debug(a)}};var sharedMod=angular.module("myApp.SharedServices",[]);
sharedMod.config(["$httpProvider",function(a){a.interceptors.push(["$q","$rootScope",function(a,e){return{request:function(a){$("#ajax-waiting").addClass("animate-text");$("#ajax-loader").show();return a},requestError:function(c){$("#ajax-waiting").removeClass("animate-text");$("#ajax-loader").hide();return a.reject(c)},response:function(a){$("#ajax-waiting").removeClass("animate-text");$("#ajax-loader").hide();e.$broadcast("ClearMessages",[]);return a},responseError:function(c){$("#ajax-waiting").removeClass("animate-text");
$("#ajax-loader").hide();C.log("Error occurred: >>>>>> "+JSON.stringify(c));return a.reject(c)}}}])}]);
sharedMod.factory("Shared",["$http","$location","$route","$filter",function(a,d,e,c){var b={User:{loggedIn:!1},loginTooltip:function(a){return b.User.loggedIn?void 0:a},hasRole:function(a){C.log("Checking role: "+a);return void 0!==b.User.roles?b.User.roles.some(function(b){return a===b.role}):!1},requireLogin:function(){a.get("./App/isLoggedIn.a").success(function(a,c,e,k){!0===a.Payload?(b.User.loggedIn=!0,C.log("User is logged in. ")):(d.path("/Non-existent"),C.log("User is not logged in. "))}).error(function(a,
b,c,d){a="Shared.requireLogin(): Error occurred: "+JSON.stringify(a);C.log(a)})},init:function(){C.log("Shared.init().");a.get("./App/getSessionDetails.a").success(function(a,c,d,k){void 0!==a.Payload&&(b.User=a.Payload,b.User.loggedIn=!0);e.reload();C.log("Shared.init(): Loaded User: "+JSON.stringify(a.Payload))}).error(function(a,b,c,d){a="Shared.init(): Error occurred: "+JSON.stringify(a);C.log(a)})}};return b}]);
sharedMod.directive("uppercase",function(){return{require:"ngModel",link:function(a,d,e,c){d=function(a){if(void 0!==a){var f=a.toUpperCase();a!==f&&(c.$setViewValue(f),c.$render());return f}};c.$parsers.push(d);d(a[e.ngModel])}}});sharedMod.directive("dateinput",["$filter",function(a){return{require:"^ngModel",restrict:"A",link:function(d,e,c,b){b.$formatters.push(function(b){return b?a("date")(b,"dd/MM/yyyy"):""});b.$parsers.push(function(b){return a("date")(b,"dd/MM/yyyy")})}}}]);
sharedMod.directive("currencyInput",["$filter",function(a){return{require:"^ngModel",restrict:"A",link:function(d,e,c,b){b.$formatters.unshift(function(b){return b?a("currency")(b):""})}}}]);sharedMod.directive("compareTo",function(){return{require:"ngModel",scope:{otherModelValue:"=compareTo"},link:function(a,d,e,c){c.$validators.compareTo=function(b){return b===a.otherModelValue};a.$watch("otherModelValue",function(){c.$validate()})}}});myApp.controller("LoginCtrl",["$scope","$http","$location","Shared",function(a,d,e,c){a.Shared=c;a.LF={};C.log("LoginCtrl loaded.");a.login=function(){void 0===a.LF.email?a.setStatus("Please supply a valid email to login!"):d.post("./App/login.a",a.LF).success(function(b,d,g,h){"OK"===b.Status?(c.init(),e.path("/No-exitent").replace()):a.setStatus(b.Payload)}).error(function(b,c,d,e){a.setStatus(b.Payload)})}}]);
myApp.controller("ProfileCtrl",["$scope","$http","$location","$routeParams","$route","Shared",function(a,d,e,c,b,f){a.Shared=f;a.Reg={};C.log("ProfileCtrl ...");var g=void 0!==c.pid,h=g?"./App/saveUser.a":"./App/register.a";g?(C.log("Editing user profile."),a.Reg=f.User):C.log("Creating new user profile.");a.saveProfile=function(){d.post(h,a.Reg).success(function(b,c,d,h){"OK"===b.Status?g?(C.log("Saved edited profile."),a.setStatus("Saved edited profile!")):(f.init(),e.path("/No-exitent").replace()):
a.setStatus(b.Payload)}).error(function(b,c,d,e){a.setStatus(b.Payload)})}}]);
myApp.controller("IndexCtrl",["$scope","$http","$location","$q","Shared",function(a,d,e,c,b){C.log("IndexCtrl...");a.RootModel={Data:{}};a.Shared=b;a.setStatus=function(b){a.StatusMessage=b;$("#statusmsg").fadeIn(400)};a.hideStatus=function(){a.StatusMessage=void 0;$("#statusmsg").fadeOut(400)};a.logout=function(){d.get("./App/logout.a").success(function(a){C.log("Logged out: "+JSON.stringify(a));b.User={};e.path("/No-exitent").replace()})};a.$on("Errors",function(b,c){a.Errors=c;a.Invalid=0<c.length;
C.log("Got errors: "+JSON.stringify(c)+". Invalid="+a.Invalid);a.setStatus("Your request could not be processed. Error occurred.")});a.$on("ClearMessages",function(b,c){a.Errors=[];a.Invalid=!1;a.hideStatus()});b.init();C.log("IndexCtrl: Loaded.")}]);myApp.controller("HomeCtrl",["$scope","$http","$routeParams","Shared",function(a,d,e,c){C.log("HomeCtrl: "+JSON.stringify(e))}]);
